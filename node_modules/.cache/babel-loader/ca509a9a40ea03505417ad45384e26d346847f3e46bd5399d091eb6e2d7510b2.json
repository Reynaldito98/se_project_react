{"ast":null,"code":"var _jsxFileName = \"/Users/reynaldoperezpauli/Desktop/Project History/SPRINT10/se_project_react/src/components/WeatherCard/WeatherCard.js\",\n  _s = $RefreshSig$();\nimport './WeatherCard.css';\nimport React from 'react';\nimport daySunny from '../../images/sunny.png';\nimport dayRain from '../../images/dayRain.png';\nimport dayRainStorm from '../../images/DayRainStorm.png';\nimport dayCloudy from '../../images/daySunnyCloudy.png';\nimport daySnow from '../../images/daySnow.png';\nimport dayMist from '../../images/Cloudy.png';\nimport nightRainStorm from '../../images/NightRainStorm.png';\nimport nightRain from '../../images/nightRain.png';\nimport nightClear from '../../images/NightClear.png';\nimport nightCloudy from '../../images/NightCloudy.png';\nimport nightSnow from '../../images/NightSnow.png';\nimport nightMist from '../../images/NightMist.png';\nimport { makeApiRequest } from '../../utils/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeatherCard() {\n  _s();\n  const [temp, setTemp] = React.useState(0);\n  const [weather, setWeather] = React.useState('');\n  React.useEffect(() => {\n    makeApiRequest().then(data => {\n      if (!(Date.now() / 1000 > data.sys.sunset) || !(Date.now() / 1000 < data.sys.sunrise)) {\n        if (data.weather[0].main === 'Thunderstorm') {\n          setWeather(nightRainStorm);\n        } else if (data.weather[0].main === 'Clear') {\n          setWeather(nightClear);\n        } else if (data.weather[0].main === 'Rain' || data.weather[0].main === 'Drizzle') {\n          setWeather(nightRain);\n        } else if (data.weather[0].main === 'Snow') {\n          setWeather(nightSnow);\n        } else if (data.weather[0].main === 'Atmosphere') {\n          setWeather(nightMist);\n        } else {\n          setWeather(nightCloudy);\n        }\n      } else {\n        if (data.weather[0].main === 'Thunderstorm') {\n          setWeather(dayRainStorm);\n        } else if (data.weather[0].main === 'Clear') {\n          setWeather(daySunny);\n        } else if (data.weather[0].main === 'Rain' || data.weather[0].main === 'Drizzle') {\n          setWeather(dayRain);\n        } else if (data.weather[0].main === 'Snow') {\n          setWeather(daySnow);\n        } else if (data.weather[0].main === 'Atmosphere') {\n          setWeather(dayMist);\n        } else {\n          setWeather(dayCloudy);\n        }\n      }\n      setTemp(data.main.temp);\n    }).catch(err => console.log(err));\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"weather-card\",\n    style: {\n      backgroundImage: `url(${weather})`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"weather-card__temperature\",\n      children: [Math.round(temp), \"\\xB0F\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(WeatherCard, \"ptHVRt1nAYqDl+AfSDaJh6lDZQA=\");\n_c = WeatherCard;\nexport default WeatherCard;\nvar _c;\n$RefreshReg$(_c, \"WeatherCard\");","map":{"version":3,"names":["React","daySunny","dayRain","dayRainStorm","dayCloudy","daySnow","dayMist","nightRainStorm","nightRain","nightClear","nightCloudy","nightSnow","nightMist","makeApiRequest","jsxDEV","_jsxDEV","WeatherCard","_s","temp","setTemp","useState","weather","setWeather","useEffect","then","data","Date","now","sys","sunset","sunrise","main","catch","err","console","log","className","style","backgroundImage","children","Math","round","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/reynaldoperezpauli/Desktop/Project History/SPRINT10/se_project_react/src/components/WeatherCard/WeatherCard.js"],"sourcesContent":["import './WeatherCard.css';\nimport React from 'react';\nimport daySunny from '../../images/sunny.png';\nimport dayRain from '../../images/dayRain.png';\nimport dayRainStorm from '../../images/DayRainStorm.png';\nimport dayCloudy from '../../images/daySunnyCloudy.png';\nimport daySnow from '../../images/daySnow.png';\nimport dayMist from '../../images/Cloudy.png'\nimport nightRainStorm from '../../images/NightRainStorm.png';\nimport nightRain from '../../images/nightRain.png';\nimport nightClear from '../../images/NightClear.png';\nimport nightCloudy from '../../images/NightCloudy.png';\nimport nightSnow from '../../images/NightSnow.png';\nimport nightMist from '../../images/NightMist.png';\nimport { makeApiRequest } from '../../utils/utils';\n\nfunction WeatherCard () {\n    const [temp, setTemp] = React.useState(0);\n    const [weather, setWeather] = React.useState('');\n\n    React.useEffect(() => {\n        makeApiRequest()\n            .then(data => {\n                if(!((Date.now()/1000) > data.sys.sunset) || !(Date.now()/1000 < data.sys.sunrise)){\n                    if(data.weather[0].main === 'Thunderstorm'){\n                        setWeather(nightRainStorm);\n                    } else if(data.weather[0].main === 'Clear') {\n                        setWeather(nightClear);\n                    } else if(data.weather[0].main === 'Rain' || data.weather[0].main === 'Drizzle') {\n                        setWeather(nightRain);\n                    } else if(data.weather[0].main === 'Snow') {\n                        setWeather(nightSnow);\n                    } else if(data.weather[0].main === 'Atmosphere') {\n                        setWeather(nightMist);\n                    } else {\n                        setWeather(nightCloudy);\n                    }\n                } else {\n                    if(data.weather[0].main === 'Thunderstorm'){\n                        setWeather(dayRainStorm);\n                    } else if(data.weather[0].main === 'Clear') {\n                        setWeather(daySunny);\n                    } else if(data.weather[0].main === 'Rain' || data.weather[0].main === 'Drizzle') {\n                        setWeather(dayRain);\n                    } else if(data.weather[0].main === 'Snow') {\n                        setWeather(daySnow);\n                    } else if(data.weather[0].main === 'Atmosphere') {\n                        setWeather(dayMist);\n                    } else {\n                        setWeather(dayCloudy);\n                    }\n                }\n                setTemp(data.main.temp);\n            })\n            .catch(err => console.log(err))\n    })\n\n    return (\n        <section className=\"weather-card\" style={{\n            backgroundImage: `url(${weather})`\n        }}>\n            <p className=\"weather-card__temperature\">{Math.round(temp)}&#xb0;F</p>\n        </section>\n    )\n}\n\nexport default WeatherCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}